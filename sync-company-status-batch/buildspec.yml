version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 8
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - REPOSITORY_URI=$ECR_REPO_URL/$ECR_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "Install dependencies"
      - pwd
      - ls
      - pip install boto3
      - wget https://releases.hashicorp.com/terraform/0.12.10/terraform_0.12.10_linux_amd64.zip
      - unzip terraform_0.12.10_linux_amd64.zip
      - mv terraform /bin
      - rm terraform_0.12.10_linux_amd64.zip
      - apt-get update
      - apt-cache search source
      - apt-get install -y curl jq
  build:
    commands:
      - echo "Packaging application"
      - cd sync-company-status-batch/src && npm run build && npm run test && cd ../..
      - echo "Building application image"
      - build_dir=sync-company-status-batch
      - docker build $build_dir -t ${ECR_REPO_NAME}:$IMAGE_TAG --file $build_dir/src/Dockerfile
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - echo "Pushing application image to ecr"
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Running terraform format..."
      - terraform fmt sync-company-status-batch/terraform
      - echo "Running terraform validate..."
      - terraform init -backend=false sync-company-status-batch/terraform && terraform validate sync-company-status-batch/terraform
      - cd sync-company-status-batch/terraform && chmod +x deploy.sh && sh deploy.sh && cd ../..
  post_build:
    commands:
      - echo Build completed on `date`
artifacts:
  files:
    - sync-company-status-batch/terraform/tfplan
  discard-paths: yes
